/*
 * Commspace API
 *   # Authentication In order to use this API you'll need two things to authenticate: - an **account_id** which identifies which Commspace account (tenant) you're integrating into. This is provided in the url of all api methods `/accounts/{account_id}/...` - an **API Key** which authenticates your access to the account. This is provided as a header as described below  # Mapping master data  Commspace relies on master data (clients, products, intermediaries) supplied by consumer systems in order to do revenue management. We've chosen to implement a consumer-supplied key system to minimize the data mapping burden for consumers. This means that for all master data entities, the consumer supplies their own unique identifier for each entity. Commspace will store that identifier internally and link any subsequent requests with the same identifier to that same entity. In the [specification](/spec.html) you can easily spot these identifier fields as all fields named with the pattern `<entity>_id` e.g. `client_id`, `product_id`, `intermediary_id`, etc.  Some key mappings (providers, product categories, commission types) have to be pre-configured by the Commspace team ahead of time. We will take responsibility for creating the necessary mappings of your identifiers for each of these entities to their Commspace equivalents - all we require is a full list of the values that you will send.  # Generating-Reports Reports can be generated through the methods exposed at the reports root.  Because reports can take a long time to generate this API does not support blocking calls i.e. wait until the report is generated before returning a response.  This API supports two patterns for non-blocking / asynchronous generation of reports:  - **Callback pattern**. The consumer provides a callback URL to post the report to. This is the preferred pattern.  - **Polling pattern**. The consumer repeatedly polls an endpoint to retrieve the report.  ## Callback pattern To make use of this pattern, simply specify a callback_url in the request to `/accounts/{account_id}/reports`.  When the report has been generated, Commspace will submit a POST to the provided URL with the following:  - report-token is the report token returned by the createReport call  - filename contains a suggested filename.  - content is a base64 encoded string of the binary data of the report  ## Polling pattern When a report is successfully requested, the API responds with a report_token in the response. Consumers can use this token to poll the endpoint `/accounts/{account_id}/reports/{report_token}`.  If the report isn't available yet, a 202 response will be returned. If the report is available a 200 response including the report will be returned. 
 *
 * OpenAPI spec version: 1.1.2
 * Contact: api@commspace.co.za
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package za.co.commspace.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import za.co.commspace.api.model.Product;
/**
 * Client
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-15T08:32:32.372Z[GMT]")
public class Client {
  @JsonProperty("client_id")
  private String clientId = null;

  @JsonProperty("last_name")
  private String lastName = null;

  @JsonProperty("initials")
  private String initials = null;

  @JsonProperty("national_registration")
  private String nationalRegistration = null;

  @JsonProperty("date_of_birth")
  private LocalDate dateOfBirth = null;

  @JsonProperty("birth_year_month")
  private String birthYearMonth = null;

  @JsonProperty("products")
  private List<Product> products = null;

  public Client clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * unique identifier by which this client is known at consumer
   * @return clientId
  **/
  @Schema(example = "12345678", required = true, description = "unique identifier by which this client is known at consumer")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public Client lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * last name of client
   * @return lastName
  **/
  @Schema(example = "Smit", required = true, description = "last name of client")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Client initials(String initials) {
    this.initials = initials;
    return this;
  }

   /**
   * full initials of client. Preferably without spaces or punctuation.
   * @return initials
  **/
  @Schema(example = "WJ", description = "full initials of client. Preferably without spaces or punctuation.")
  public String getInitials() {
    return initials;
  }

  public void setInitials(String initials) {
    this.initials = initials;
  }

  public Client nationalRegistration(String nationalRegistration) {
    this.nationalRegistration = nationalRegistration;
    return this;
  }

   /**
   * ID Number / Passport / other issued registration
   * @return nationalRegistration
  **/
  @Schema(example = "8901015800080", description = "ID Number / Passport / other issued registration")
  public String getNationalRegistration() {
    return nationalRegistration;
  }

  public void setNationalRegistration(String nationalRegistration) {
    this.nationalRegistration = nationalRegistration;
  }

  public Client dateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Date of birth of client formatted per RFC3339
   * @return dateOfBirth
  **/
  @Schema(description = "Date of birth of client formatted per RFC3339")
  public LocalDate getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public Client birthYearMonth(String birthYearMonth) {
    this.birthYearMonth = birthYearMonth;
    return this;
  }

   /**
   * Client birth year and month in &#x27;YYYY-MM&#x27; format. It is used to determine client age for analytics. Supply this if there are privacy concerns about sharing a full date_of_birth for a client.
   * @return birthYearMonth
  **/
  @Schema(description = "Client birth year and month in 'YYYY-MM' format. It is used to determine client age for analytics. Supply this if there are privacy concerns about sharing a full date_of_birth for a client.")
  public String getBirthYearMonth() {
    return birthYearMonth;
  }

  public void setBirthYearMonth(String birthYearMonth) {
    this.birthYearMonth = birthYearMonth;
  }

  public Client products(List<Product> products) {
    this.products = products;
    return this;
  }

  public Client addProductsItem(Product productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * products held by this client.
   * @return products
  **/
  @Schema(description = "products held by this client.")
  public List<Product> getProducts() {
    return products;
  }

  public void setProducts(List<Product> products) {
    this.products = products;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Client client = (Client) o;
    return Objects.equals(this.clientId, client.clientId) &&
        Objects.equals(this.lastName, client.lastName) &&
        Objects.equals(this.initials, client.initials) &&
        Objects.equals(this.nationalRegistration, client.nationalRegistration) &&
        Objects.equals(this.dateOfBirth, client.dateOfBirth) &&
        Objects.equals(this.birthYearMonth, client.birthYearMonth) &&
        Objects.equals(this.products, client.products);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, lastName, initials, nationalRegistration, dateOfBirth, birthYearMonth, products);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Client {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    initials: ").append(toIndentedString(initials)).append("\n");
    sb.append("    nationalRegistration: ").append(toIndentedString(nationalRegistration)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    birthYearMonth: ").append(toIndentedString(birthYearMonth)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
