/*
 * Commspace API
 *   # Authentication In order to use this API you'll need two things to authenticate: - an **account_id** which identifies which Commspace account (tenant) you're integrating into. This is provided in the url of all api methods `/accounts/{account_id}/...` - an **API Key** which authenticates your access to the account. This is provided as a header as described below  # Mapping master data  Commspace relies on master data (clients, products, intermediaries) supplied by consumer systems in order to do revenue management. We've chosen to implement a consumer-supplied key system to minimize the data mapping burden for consumers. This means that for all master data entities, the consumer supplies their own unique identifier for each entity. Commspace will store that identifier internally and link any subsequent requests with the same identifier to that same entity. In the [specification](/spec.html) you can easily spot these identifier fields as all fields named with the pattern `<entity>_id` e.g. `client_id`, `product_id`, `intermediary_id`, etc.  Some key mappings (providers, product categories, commission types) have to be pre-configured by the Commspace team ahead of time. We will take responsibility for creating the necessary mappings of your identifiers for each of these entities to their Commspace equivalents - all we require is a full list of the values that you will send.  # Generating-Reports Reports can be generated through the methods exposed at the reports root.  Because reports can take a long time to generate this API does not support blocking calls i.e. wait until the report is generated before returning a response.  This API supports two patterns for non-blocking / asynchronous generation of reports:  - **Callback pattern**. The consumer provides a callback URL to post the report to. This is the preferred pattern.  - **Polling pattern**. The consumer repeatedly polls an endpoint to retrieve the report.  ## Callback pattern To make use of this pattern, simply specify a callback_url in the request to `/accounts/{account_id}/reports`.  When the report has been generated, Commspace will submit a POST to the provided URL with the following:  - report-token is the report token returned by the createReport call  - filename contains a suggested filename.  - content is a base64 encoded string of the binary data of the report  ## Polling pattern When a report is successfully requested, the API responds with a report_token in the response. Consumers can use this token to poll the endpoint `/accounts/{account_id}/reports/{report_token}`.  If the report isn't available yet, a 202 response will be returned. If the report is available a 200 response including the report will be returned. 
 *
 * OpenAPI spec version: 1.1.2
 * Contact: api@commspace.co.za
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package za.co.commspace.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Container for product details. Only product_id needs to be supplied if you&#x27;re making use of the /accounts/{account_id}/clients POST method to supply master client and product data. Alternatively, supply as many of the other fields as possible to aid in linking of the transaction to clients and products.
 */
@Schema(description = "Container for product details. Only product_id needs to be supplied if you're making use of the /accounts/{account_id}/clients POST method to supply master client and product data. Alternatively, supply as many of the other fields as possible to aid in linking of the transaction to clients and products.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-15T08:32:32.372Z[GMT]")
public class TransactionProductDetails {
  @JsonProperty("product_id")
  private String productId = null;

  @JsonProperty("provider_id")
  private String providerId = null;

  @JsonProperty("product_number")
  private String productNumber = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("secondary_provider")
  private String secondaryProvider = null;

  @JsonProperty("grouping")
  private String grouping = null;

  @JsonProperty("group_scheme_name")
  private String groupSchemeName = null;

  public TransactionProductDetails productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Unique identifier by which the product is known at consumer. It must match the product_id on a product loaded through the /accounts/{account_id}/clients POST method
   * @return productId
  **/
  @Schema(example = "12442453", description = "Unique identifier by which the product is known at consumer. It must match the product_id on a product loaded through the /accounts/{account_id}/clients POST method")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public TransactionProductDetails providerId(String providerId) {
    this.providerId = providerId;
    return this;
  }

   /**
   * unique identifier by which the provider is known at consumer.
   * @return providerId
  **/
  @Schema(example = "sanlam", description = "unique identifier by which the provider is known at consumer.")
  public String getProviderId() {
    return providerId;
  }

  public void setProviderId(String providerId) {
    this.providerId = providerId;
  }

  public TransactionProductDetails productNumber(String productNumber) {
    this.productNumber = productNumber;
    return this;
  }

   /**
   * product number specified by the provider.
   * @return productNumber
  **/
  @Schema(example = "23353667X1", description = "product number specified by the provider.")
  public String getProductNumber() {
    return productNumber;
  }

  public void setProductNumber(String productNumber) {
    this.productNumber = productNumber;
  }

  public TransactionProductDetails description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description of the product (optional)
   * @return description
  **/
  @Schema(description = "description of the product (optional)")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TransactionProductDetails secondaryProvider(String secondaryProvider) {
    this.secondaryProvider = secondaryProvider;
    return this;
  }

   /**
   * The secondary or underlying provider (if applicable). Used for group schemes etc.
   * @return secondaryProvider
  **/
  @Schema(description = "The secondary or underlying provider (if applicable). Used for group schemes etc.")
  public String getSecondaryProvider() {
    return secondaryProvider;
  }

  public void setSecondaryProvider(String secondaryProvider) {
    this.secondaryProvider = secondaryProvider;
  }

  public TransactionProductDetails grouping(String grouping) {
    this.grouping = grouping;
    return this;
  }

   /**
   * optional value to provide an additional layer of grouping on products from a particular provider
   * @return grouping
  **/
  @Schema(description = "optional value to provide an additional layer of grouping on products from a particular provider")
  public String getGrouping() {
    return grouping;
  }

  public void setGrouping(String grouping) {
    this.grouping = grouping;
  }

  public TransactionProductDetails groupSchemeName(String groupSchemeName) {
    this.groupSchemeName = groupSchemeName;
    return this;
  }

   /**
   * The name of the group scheme if applicable
   * @return groupSchemeName
  **/
  @Schema(example = "PPC", description = "The name of the group scheme if applicable")
  public String getGroupSchemeName() {
    return groupSchemeName;
  }

  public void setGroupSchemeName(String groupSchemeName) {
    this.groupSchemeName = groupSchemeName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionProductDetails transactionProductDetails = (TransactionProductDetails) o;
    return Objects.equals(this.productId, transactionProductDetails.productId) &&
        Objects.equals(this.providerId, transactionProductDetails.providerId) &&
        Objects.equals(this.productNumber, transactionProductDetails.productNumber) &&
        Objects.equals(this.description, transactionProductDetails.description) &&
        Objects.equals(this.secondaryProvider, transactionProductDetails.secondaryProvider) &&
        Objects.equals(this.grouping, transactionProductDetails.grouping) &&
        Objects.equals(this.groupSchemeName, transactionProductDetails.groupSchemeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, providerId, productNumber, description, secondaryProvider, grouping, groupSchemeName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionProductDetails {\n");
    
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    productNumber: ").append(toIndentedString(productNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    secondaryProvider: ").append(toIndentedString(secondaryProvider)).append("\n");
    sb.append("    grouping: ").append(toIndentedString(grouping)).append("\n");
    sb.append("    groupSchemeName: ").append(toIndentedString(groupSchemeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
