/*
 * Commspace API
 *   # Authentication In order to use this API you'll need two things to authenticate: - an **account_id** which identifies which Commspace account (tenant) you're integrating into. This is provided in the url of all api methods `/accounts/{account_id}/...` - an **API Key** which authenticates your access to the account. This is provided as a header as described below  # Mapping master data  Commspace relies on master data (clients, products, intermediaries) supplied by consumer systems in order to do revenue management. We've chosen to implement a consumer-supplied key system to minimize the data mapping burden for consumers. This means that for all master data entities, the consumer supplies their own unique identifier for each entity. Commspace will store that identifier internally and link any subsequent requests with the same identifier to that same entity. In the [specification](/spec.html) you can easily spot these identifier fields as all fields named with the pattern `<entity>_id` e.g. `client_id`, `product_id`, `intermediary_id`, etc.  Some key mappings (providers, product categories, commission types) have to be pre-configured by the Commspace team ahead of time. We will take responsibility for creating the necessary mappings of your identifiers for each of these entities to their Commspace equivalents - all we require is a full list of the values that you will send.  # Generating-Reports Reports can be generated through the methods exposed at the reports root.  Because reports can take a long time to generate this API does not support blocking calls i.e. wait until the report is generated before returning a response.  This API supports two patterns for non-blocking / asynchronous generation of reports:  - **Callback pattern**. The consumer provides a callback URL to post the report to. This is the preferred pattern.  - **Polling pattern**. The consumer repeatedly polls an endpoint to retrieve the report.  ## Callback pattern To make use of this pattern, simply specify a callback_url in the request to `/accounts/{account_id}/reports`.  When the report has been generated, Commspace will submit a POST to the provided URL with the following:  - report-token is the report token returned by the createReport call  - filename contains a suggested filename.  - content is a base64 encoded string of the binary data of the report  ## Polling pattern When a report is successfully requested, the API responds with a report_token in the response. Consumers can use this token to poll the endpoint `/accounts/{account_id}/reports/{report_token}`.  If the report isn't available yet, a 202 response will be returned. If the report is available a 200 response including the report will be returned. 
 *
 * OpenAPI spec version: 1.1.2
 * Contact: api@commspace.co.za
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package za.co.commspace.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import za.co.commspace.api.model.Agreement;
/**
 * Product
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-15T08:32:32.372Z[GMT]")
public class Product {
  @JsonProperty("product_id")
  private String productId = null;

  @JsonProperty("product_number")
  private String productNumber = null;

  @JsonProperty("provider_id")
  private String providerId = null;

  @JsonProperty("product_category_id")
  private String productCategoryId = null;

  @JsonProperty("agreements")
  private List<Agreement> agreements = new ArrayList<>();

  @JsonProperty("inception_date")
  private LocalDate inceptionDate = null;

  @JsonProperty("termination_date")
  private LocalDate terminationDate = null;

  @JsonProperty("reference_number")
  private String referenceNumber = null;

  public Product productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * unique identifier by which this product is known at consumer
   * @return productId
  **/
  @Schema(example = "45678123", required = true, description = "unique identifier by which this product is known at consumer")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public Product productNumber(String productNumber) {
    this.productNumber = productNumber;
    return this;
  }

   /**
   * unique product number issued by the product provider
   * @return productNumber
  **/
  @Schema(example = "100015643", required = true, description = "unique product number issued by the product provider")
  public String getProductNumber() {
    return productNumber;
  }

  public void setProductNumber(String productNumber) {
    this.productNumber = productNumber;
  }

  public Product providerId(String providerId) {
    this.providerId = providerId;
    return this;
  }

   /**
   * unique identifier by which the product provider is known by the consumer
   * @return providerId
  **/
  @Schema(example = "SLM", required = true, description = "unique identifier by which the product provider is known by the consumer")
  public String getProviderId() {
    return providerId;
  }

  public void setProviderId(String providerId) {
    this.providerId = providerId;
  }

  public Product productCategoryId(String productCategoryId) {
    this.productCategoryId = productCategoryId;
    return this;
  }

   /**
   * unique identifier by which the product category is known by the consumer
   * @return productCategoryId
  **/
  @Schema(example = "1", required = true, description = "unique identifier by which the product category is known by the consumer")
  public String getProductCategoryId() {
    return productCategoryId;
  }

  public void setProductCategoryId(String productCategoryId) {
    this.productCategoryId = productCategoryId;
  }

  public Product agreements(List<Agreement> agreements) {
    this.agreements = agreements;
    return this;
  }

  public Product addAgreementsItem(Agreement agreementsItem) {
    this.agreements.add(agreementsItem);
    return this;
  }

   /**
   * array of agreements for this product
   * @return agreements
  **/
  @Schema(required = true, description = "array of agreements for this product")
  public List<Agreement> getAgreements() {
    return agreements;
  }

  public void setAgreements(List<Agreement> agreements) {
    this.agreements = agreements;
  }

  public Product inceptionDate(LocalDate inceptionDate) {
    this.inceptionDate = inceptionDate;
    return this;
  }

   /**
   * inception date of the product formatted per RFC3339
   * @return inceptionDate
  **/
  @Schema(description = "inception date of the product formatted per RFC3339")
  public LocalDate getInceptionDate() {
    return inceptionDate;
  }

  public void setInceptionDate(LocalDate inceptionDate) {
    this.inceptionDate = inceptionDate;
  }

  public Product terminationDate(LocalDate terminationDate) {
    this.terminationDate = terminationDate;
    return this;
  }

   /**
   * termination date of the product formatted per RFC3339
   * @return terminationDate
  **/
  @Schema(description = "termination date of the product formatted per RFC3339")
  public LocalDate getTerminationDate() {
    return terminationDate;
  }

  public void setTerminationDate(LocalDate terminationDate) {
    this.terminationDate = terminationDate;
  }

  public Product referenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * additional reference number for the product (optional)
   * @return referenceNumber
  **/
  @Schema(description = "additional reference number for the product (optional)")
  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.productId, product.productId) &&
        Objects.equals(this.productNumber, product.productNumber) &&
        Objects.equals(this.providerId, product.providerId) &&
        Objects.equals(this.productCategoryId, product.productCategoryId) &&
        Objects.equals(this.agreements, product.agreements) &&
        Objects.equals(this.inceptionDate, product.inceptionDate) &&
        Objects.equals(this.terminationDate, product.terminationDate) &&
        Objects.equals(this.referenceNumber, product.referenceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, productNumber, providerId, productCategoryId, agreements, inceptionDate, terminationDate, referenceNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productNumber: ").append(toIndentedString(productNumber)).append("\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    productCategoryId: ").append(toIndentedString(productCategoryId)).append("\n");
    sb.append("    agreements: ").append(toIndentedString(agreements)).append("\n");
    sb.append("    inceptionDate: ").append(toIndentedString(inceptionDate)).append("\n");
    sb.append("    terminationDate: ").append(toIndentedString(terminationDate)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
